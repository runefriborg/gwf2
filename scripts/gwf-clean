#!/usr/bin/env python

import os
import os.path
import argparse

from gwf.parser import parse
from gwf.dependency_graph import DependencyGraph


parser = argparse.ArgumentParser(description='Clean workflow files.')
parser.add_argument('workflow_file', help='The .gwf file containing the workflow')

args = parser.parse_args()

# parse workflow file
workflow = parse(args.workflow_file)

# Build graph
graph = DependencyGraph(workflow)
workflow.target_names = frozenset(node.task.name for node in graph.end_targets)

# Retrieve the list of all tasks
tasklist = graph.tasklist(workflow.target_names)

# Remove all output files
for task in tasklist:
    for path in task.output:
        if os.path.exists(path):
            os.remove(path)
            print("Removed " + path)
