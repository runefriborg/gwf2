#!/usr/bin/env python

import sys
import argparse

from gwf.parser import parse
from gwf.task_scheduler import TaskScheduler
from gwf.process_scheduler import ProcessScheduler

parser = argparse.ArgumentParser(description='Run a workflow locally.')

parser.add_argument('-f', '--file',
                    default='workflow.gwf', dest='workflow_file',
                    help='workflow file if not the default (workflow.gwf).')

group = parser.add_mutually_exclusive_group()

group.add_argument('-a', '--all', default=False, action='store_true',
                   help='run all end targets in the workflow')
group.add_argument('-t', '--targets', nargs='*', default=[],
                   help='the target(s) to process.')

args = parser.parse_args()

workflow = parse(args.workflow_file, args.targets, args.all)

for target in args.targets:
    if target not in workflow.targets:
        print 'Target %s not found in workflow.' % target
        sys.exit(2)

process_scheduler = ProcessScheduler()

scheduler = TaskScheduler(workflow, process_scheduler)
scheduler.run()
